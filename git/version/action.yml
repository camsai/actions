---

name: Create New Version Tag
description: |
  Uses today's date and existing tags to determine new tag.
  See README for more detail. Assumes git has been configured for use in the workflow.
inputs:
  create-new-tag:
    description: |
      if true, create a new tag. Set to false for subsequent publish steps in a single workflow
    required: false
    default: 'true'
outputs:
  tag-name:
    description: Git tag name
    value: ${{ steps.get-tag.outputs.tag-name }}

runs:
  using: composite
  steps:
    - name: Determine version tag
      id: get-tag
      shell: bash -l {0}
      run: |
        # This properly sorts multiple identical tags by when they were created
        TAGS=$(git for-each-ref --sort=creatordate --format='%(refname:short)' refs/tags)
        LATEST_TAG=$(echo "${TAGS}" | tail -n 1 | awk -F' ' '{print $NF}')
        if [[ "${{ inputs.create-new-tag }}" != "true" ]]; then
            TAG_NAME="${LATEST_TAG}"
        else
            DATE=$(date +%Y.%-m.%-d)
            if [[ "${LATEST_TAG}" != *"${DATE}"* ]]; then
                TAG_NAME="${DATE}-0"
            else
                OLD=$(echo ${LATEST_TAG} | cut -d- -f2)
                NEW=$((OLD + 1))
                TAG_NAME="${DATE}-${NEW}"
            fi
        fi
        echo "today's date: ${DATE}"
        echo "latest tag: ${LATEST_TAG}"
        echo "create new tag: ${{ inputs.create-new-tag }}"
        echo "new tag: ${TAG_NAME}"
        echo "::set-output name=tag-name::$(echo ${TAG_NAME})"

